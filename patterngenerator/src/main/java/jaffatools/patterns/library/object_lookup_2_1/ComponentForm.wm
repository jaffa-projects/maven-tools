// .//GEN-BEGIN:_1_be
/******************************************************
 * Code Generated From JAFFA Framework Default Pattern
 *
 * The JAFFA Project can be found at http://jaffa.sourceforge.net
 * and is available under the Lesser GNU Public License
 ******************************************************/
package $(BasePackage.Lower).components.$(Component.Lower).ui;

import java.util.*;
import javax.servlet.http.HttpServletRequest;
import org.apache.log4j.Logger;
import org.jaffa.metadata.*;
import org.jaffa.datatypes.Formatter;
import org.jaffa.datatypes.*;
import org.jaffa.components.finder.*;
import org.jaffa.components.lookup.*;
import org.jaffa.presentation.portlet.widgets.model.*;
import org.jaffa.presentation.portlet.widgets.controller.*;
import org.jaffa.util.StringHelper;

#set $wm_codeHelperAdded = "false"
#foreach $field in $CriteriaFields.values() #begin
#if ($wm_codeHelperAdded == "false" && $field.Breakup != null && $field.Breakup.DynamicValues != null) #begin
#set $wm_codeHelperAdded = "true"
import org.jaffa.components.codehelper.dto.*;
#end
#end
import $(BasePackage.Lower).components.$(Component.Lower).dto.$(Component.Upper1)OutDto;
import $(BasePackage.Lower).components.$(Component.Lower).dto.$(Component.Upper1)OutRowDto;
import $(DomainPackage.Lower).$(DomainObject.Upper1)Meta;

$ScratchPad.clear()
#foreach $field in $CriteriaFields.values() #begin
#if ($(field.AltDomainObject) != null) #begin
#set $wm_package = "$(field.AltDomainObject.Package.Lower).$(field.AltDomainObject.Object.Upper1)"
#if ($ScratchPad.get($wm_package) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_package,$wm_package) != null) #begin #end
import $(wm_package)Meta;
#end
#end
#end
$ScratchPad.clear()
// .//GEN-END:_1_be
// Add additional imports//GEN-FIRST:_imports




// .//GEN-LAST:_imports
// .//GEN-BEGIN:_2_be
/** The FormBean class to support $(Component.Upper1).
 */
public class $(Component.Upper1)Form extends LookupForm {

    private static Logger log = Logger.getLogger($(Component.Upper1)Form.class);
    // .//GEN-END:_2_be

#foreach $field in $CriteriaFields.values() #begin
#if ($field.AltDomainObject == null) #begin
#set $wm_domainObject = "$(DomainObject.Upper1)"
#else
#set $wm_domainObject = "$(field.AltDomainObject.Object.Upper1)"
#end
#if ($field.Breakup != null) #begin
#set $wm_widgetType = $(field.Breakup.WidgetType.WidgetTypeBasedOnBreakup)
#elseif ($(field.DataType.DataTypeBoolean)) #begin
#set $wm_widgetType = "DropDown"
#else
#set $wm_widgetType = "EditBox"
#end
    // .//GEN-BEGIN:$(field.Name.JavaBeanStyle)_1_be
    /** Getter for property $(field.Name.JavaBeanStyle).
     * @return Value of property $(field.Name.JavaBeanStyle).
     */
    public String get$(field.Name.Upper1)() {
        return ( ($(Component.Upper1)Component) getComponent() ).get$(field.Name.Upper1)();
    }

    /** Setter for property $(field.Name.JavaBeanStyle).
     * @param $(field.Name.JavaBeanStyle) New value of property $(field.Name.JavaBeanStyle).
     */
    public void set$(field.Name.Upper1)(String $(field.Name.JavaBeanStyle)) {
        ( ($(Component.Upper1)Component) getComponent() ).set$(field.Name.Upper1)($(field.Name.JavaBeanStyle));
    }

    /** Getter for property $(field.Name.JavaBeanStyle). This is invoked by the custom tag, when the jsp is rendered, to get the current value.
     * @return Value of property $(field.Name.JavaBeanStyle).
     */
    public $(wm_widgetType)Model get$(field.Name.Upper1)WM() {
        $(wm_widgetType)Model $(field.Name.JavaBeanStyle)Model = ($(wm_widgetType)Model) getWidgetCache().getModel("$(field.Name.JavaBeanStyle)");
        if ($(field.Name.JavaBeanStyle)Model == null) {

#if ($field.Breakup != null && $wm_widgetType == "DropDown") #begin
            if (get$(field.Name.Upper1)() != null)
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model( get$(field.Name.Upper1)() );
            else
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model("");

#if ($field.Breakup.StaticValues != null) #begin
#foreach $staticValue in $field.Breakup.StaticValues.values() #begin
            $(field.Name.JavaBeanStyle)Model.addOption("$(staticValue.Description)", "$(staticValue.Code)");
#end
#end

#if ($field.Breakup.DynamicValues != null) #begin
            CodeHelperOutElementDto dto = ( ($(Component.Upper1)Component) getComponent() ).get$(field.Name.Upper1)Codes();
            if (dto != null && dto.getCodeHelperOutCodeDtoCount() > 0) {
                CodeHelperOutCodeDto[] codes = dto.getCodeHelperOutCodeDtos();
                for (int i = 0; i < codes.length; i++) {
                    CodeHelperOutCodeDto code = codes[i];
                    $(field.Name.JavaBeanStyle)Model.addOption(Formatter.format(code.getDescription()), Formatter.format(code.getCode()));
                }
            }
#end

#elseif ($field.Breakup != null && $wm_widgetType == "Grid") #begin
            $(field.Name.JavaBeanStyle)Model = new GridModel();
            Collection existingValues = null;
            Object code = null;
            GridModelRow row = null;
            if (get$(field.Name.Upper1)() != null)
                existingValues = StringHelper.convertToList(get$(field.Name.Upper1)());

#if ($field.Breakup.StaticValues != null) #begin
#foreach $staticValue in $field.Breakup.StaticValues.values() #begin
            row = $(field.Name.JavaBeanStyle)Model.newRow();
            code = "$(staticValue.Code)";
            row.addElement("code", code);
            row.addElement("description", "$(staticValue.Description)");
            if (existingValues != null && existingValues.contains(code))
                row.addElement("checked", new CheckBoxModel(true));
            else
                row.addElement("checked", new CheckBoxModel(false));
#end
#end

#if ($field.Breakup.DynamicValues != null) #begin
            CodeHelperOutElementDto dto = ( ($(Component.Upper1)Component) getComponent() ).get$(field.Name.Upper1)Codes();
            if (dto != null && dto.getCodeHelperOutCodeDtoCount() > 0) {
                CodeHelperOutCodeDto[] codes = dto.getCodeHelperOutCodeDtos();
                for (int i = 0; i < codes.length; i++) {
                    CodeHelperOutCodeDto codeDto = codes[i];
                    row = $(field.Name.JavaBeanStyle)Model.newRow();
                    code = codeDto.getCode();
                    row.addElement("code", code);
                    row.addElement("description", Formatter.format(codeDto.getDescription()));
                    if (existingValues != null && existingValues.contains(code))
                        row.addElement("checked", new CheckBoxModel(true));
                    else
                        row.addElement("checked", new CheckBoxModel(false));
                }
            }
#end

#elseif ($wm_widgetType == "EditBox") #begin
            if (get$(field.Name.Upper1)() != null)
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model( get$(field.Name.Upper1)() );
            else
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model();

#if ( $(field.DataType.DataTypeString) && $(field.DomainField) != null && $(field.DomainField.toString()) != "") #begin
            $(field.Name.JavaBeanStyle)Model.setStringCase( ((StringFieldMetaData) $(wm_domainObject)Meta.META_$(field.DomainField.Static)).getCaseType() );
#end

#elseif ($(field.DataType.DataTypeBoolean) && $wm_widgetType == "DropDown") #begin
            if (get$(field.Name.Upper1)() != null)
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model( get$(field.Name.Upper1)() );
            else
                $(field.Name.JavaBeanStyle)Model = new $(wm_widgetType)Model("");
            Map optionsMap = CriteriaDropDownOptions.getBooleanCriteriaDropDownOptions();
            Set options = optionsMap.entrySet();
            for (Iterator i = options.iterator(); i.hasNext();) {
                Map.Entry option = (Map.Entry) i.next();
                $(field.Name.JavaBeanStyle)Model.addOption((String) option.getValue(), (String) option.getKey());
            }
#end
            // .//GEN-END:$(field.Name.JavaBeanStyle)_1_be
            // Add custom code //GEN-FIRST:$(field.Name.JavaBeanStyle)_1


            // .//GEN-LAST:$(field.Name.JavaBeanStyle)_1
            // .//GEN-BEGIN:$(field.Name.JavaBeanStyle)_2_be
            getWidgetCache().addModel("$(field.Name.JavaBeanStyle)", $(field.Name.JavaBeanStyle)Model);
        }
        return $(field.Name.JavaBeanStyle)Model;
    }

    /** Setter for property $(field.Name.JavaBeanStyle). This is invoked by the servlet, when a post is done on the Criteria screen.
     * @param value New value of property $(field.Name.JavaBeanStyle).
     */
    public void set$(field.Name.Upper1)WV(String value) {
        $(wm_widgetType)Controller.updateModel(value, get$(field.Name.Upper1)WM());
    }

#if (!$(field.DataType.DataTypeBoolean) && ($field.Breakup == null || $field.Breakup.WidgetType.Lower == "dropdown")) #begin

    /** Getter for DropDown property $(field.Name.JavaBeanStyle).
     * @return Value of property $(field.Name.JavaBeanStyle)Dd.
     */
    public String get$(field.Name.Upper1)Dd() {
        return ( ($(Component.Upper1)Component) getComponent() ).get$(field.Name.Upper1)Dd();
    }

    /** Setter for DropDown property $(field.Name.JavaBeanStyle).
     * @param $(field.Name.JavaBeanStyle)Dd New value of property $(field.Name.JavaBeanStyle)Dd.
     */
    public void set$(field.Name.Upper1)Dd(String $(field.Name.JavaBeanStyle)Dd) {
        ( ($(Component.Upper1)Component) getComponent() ).set$(field.Name.Upper1)Dd($(field.Name.JavaBeanStyle)Dd);
    }

    /** Getter for DropDown property $(field.Name.JavaBeanStyle). This is invoked by the custom tag, when the jsp is rendered, to get the current value.
     * @return Value of property $(field.Name.JavaBeanStyle)Dd.
     */
    public DropDownModel get$(field.Name.Upper1)DdWM() {
        DropDownModel $(field.Name.JavaBeanStyle)DdModel = (DropDownModel) getWidgetCache().getModel("$(field.Name.JavaBeanStyle)Dd");
        if ($(field.Name.JavaBeanStyle)DdModel == null) {
            if (get$(field.Name.Upper1)Dd() != null)
                $(field.Name.JavaBeanStyle)DdModel = new DropDownModel( get$(field.Name.Upper1)Dd() );
            else
                $(field.Name.JavaBeanStyle)DdModel = new DropDownModel(CriteriaField.RELATIONAL_EQUALS);

#if ($field.Breakup != null && $wm_widgetType = "DropDown") #begin
            Map optionsMap = CriteriaDropDownOptions.getDropDownCriteriaDropDownOptions();
#elseif ($(field.DataType.DataTypeDateOnly) || $(field.DataType.DataTypeDateTime)) #begin
            Map optionsMap = CriteriaDropDownOptions.getDateCriteriaDropDownOptions();
#elseif ($(field.DataType.DataTypeNumeric)) #begin
            Map optionsMap = CriteriaDropDownOptions.getNumericalCriteriaDropDownOptions();
#else
            Map optionsMap = CriteriaDropDownOptions.getAllCriteriaDropDownOptions();
#end
            Set options = optionsMap.entrySet();
            for (Iterator i = options.iterator(); i.hasNext();) {
                Map.Entry option = (Map.Entry) i.next();
                $(field.Name.JavaBeanStyle)DdModel.addOption((String) option.getValue(), (String) option.getKey());
            }
            getWidgetCache().addModel("$(field.Name.JavaBeanStyle)Dd", $(field.Name.JavaBeanStyle)DdModel);
        }
        return $(field.Name.JavaBeanStyle)DdModel;
    }

    /** Setter for DropDown property $(field.Name.JavaBeanStyle). This is invoked by the servlet, when a post is done on the Criteria screen.
     * @param value New value of property $(field.Name.JavaBeanStyle)Dd.
     */
    public void set$(field.Name.Upper1)DdWV(String value) {
        DropDownController.updateModel(value, get$(field.Name.Upper1)DdWM());
    }

#end
    // .//GEN-END:$(field.Name.JavaBeanStyle)_2_be
#end
    // .//GEN-BEGIN:_doValidate_1_be
    /** This method should be invoked to ensure a valid state of the FormBean. It will validate the data in the models and set the corresponding properties.
     * Errors will be raised in the FormBean, if any validation fails.
     * @param request The request stream
     * @return A true indicates validations went through successfully. */
    public boolean doValidate(HttpServletRequest request) {
        boolean valid = super.doValidate(request);
        String value = null;
        StringBuffer buf = null;


#foreach $field in $CriteriaFields.values() #begin
#if ($field.Breakup != null && $field.Breakup.WidgetType.Lower == "checkbox") #begin
        buf = new StringBuffer();
        if (get$(field.Name.Upper1)WM().getRows() != null) {
            for (Iterator i = get$(field.Name.Upper1)WM().getRows().iterator(); i.hasNext(); ) {
                GridModelRow row = (GridModelRow) i.next();
                boolean checked = ((CheckBoxModel) row.getElement("checked")).getState();
                if (checked) {
                    if (buf.length() > 0)
                        buf.append(',');
                    buf.append(row.getElement("code"));
                }
            }
        }
        if (buf.length() > 0)
            value = buf.toString();
        else
            value = null;
#else
        value = get$(field.Name.Upper1)WM().getValue();
#end
        if (value != null && value.trim().length() == 0)
            value = null;
        set$(field.Name.Upper1)(value);

#if (!$(field.DataType.DataTypeBoolean) && ($field.Breakup == null || $field.Breakup.WidgetType.Lower == "dropdown")) #begin
        set$(field.Name.Upper1)Dd(get$(field.Name.Upper1)DdWM().getValue());
#end

#end
        // .//GEN-END:_doValidate_1_be
        // Add custom code //GEN-FIRST:_doValidate_1



        // .//GEN-LAST:_doValidate_1
        // .//GEN-BEGIN:_doValidate_2_be
        return valid;
    }
    // .//GEN-END:_doValidate_2_be
    // .//GEN-BEGIN:_populateRows_1_be
    /** This will populate the input GridModel with the data in the finderOutDto of the Component.
     * @param rows The GridModel object to populate.
     */
    public void populateRows(GridModel rows) {
        rows.clearRows();
        $(Component.Upper1)OutDto outputDto = ($(Component.Upper1)OutDto) (($(Component.Upper1)Component) getComponent()).getFinderOutDto();
        if (outputDto != null) {
            GridModelRow row;
            for (int i = 0; i < outputDto.getRowsCount(); i++) {
                $(Component.Upper1)OutRowDto rowDto = outputDto.getRows(i);
                row = rows.newRow();
                row.addElement(LookupComponent2.MULTI_SELECT_CHECKBOX, new CheckBoxModel(false));

#foreach $field in $ResultsFields.values() #begin
#if ($(field.DataType.DataTypeBoolean)) #begin
                row.addElement("$(field.Name.JavaBeanStyle)", new CheckBoxModel( (rowDto.get$(field.Name.Upper1)() != null ? rowDto.get$(field.Name.Upper1)() : Boolean.FALSE) ));
#else
                row.addElement("$(field.Name.JavaBeanStyle)", rowDto.get$(field.Name.Upper1)());
#end
#end
                // .//GEN-END:_populateRows_1_be
                // Add custom code for the row //GEN-FIRST:_populateRows_1


                // .//GEN-LAST:_populateRows_1
                // .//GEN-BEGIN:_populateRows_2_be
            }
        }
    }
    // .//GEN-END:_populateRows_2_be
    // All the custom code goes here //GEN-FIRST:_custom






    // .//GEN-LAST:_custom
}
