// .//GEN-BEGIN:_1_be
/******************************************************
 * Code Generated From JAFFA Framework Default Pattern
 * 
 * The JAFFA Project can be found at http://jaffa.sourceforge.net
 * and is available under the Lesser GNU Public License
 ******************************************************/
package $(BasePackage.Lower).components.$(Component.Lower).ui;

import java.util.*;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionErrors;
import org.jaffa.presentation.portlet.ActionBase;
import org.jaffa.presentation.portlet.FormKey;
import org.jaffa.exceptions.FrameworkException;
import org.jaffa.exceptions.ApplicationExceptions;
import org.jaffa.exceptions.ApplicationException;
import org.jaffa.presentation.portlet.widgets.model.GridModel;
import org.jaffa.presentation.portlet.widgets.model.GridModelRow;
// .//GEN-END:_1_be
// Add additional imports//GEN-FIRST:_imports




// .//GEN-LAST:_imports
// .//GEN-BEGIN:_2_be
/** The Action class for handling events related to the Results screen.
 */
public class $(Component.Upper1)ResultsAction extends ActionBase {
    private static final Logger log = Logger.getLogger($(Component.Upper1)ResultsAction.class);
    

    /** Invokes the do_Rows_Select_Clicked() method.
     * @param rowNum The selected row on the Results screen.
     * @return The FormKey for the generic lookup jsp.
     */ 
    public FormKey do_Rows_Clicked(String rowNum) {
        return do_Rows_Select_Clicked(rowNum);
    }

    /** This will add the 'lookup' attribute on the request stream, with a Map containing the fieldnames (from the targetFields property) and values (from the selectedRow).
     * It will then invoke the quit() method on the component.
     * Finally it will return a FormKey object for the generic lookup jsp.
     * @param rowNum The selected row on the Results screen.
     * @return The FormKey for the generic lookup jsp.
     */    
    public FormKey do_Rows_Select_Clicked(String rowNum) {
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();

        GridModel model = (GridModel) myForm.getRowsWM();
        GridModelRow selectedRow = model.getRow(Integer.parseInt(rowNum));

        return myComp.performLookup(request, selectedRow);
    }
    // .//GEN-END:_2_be
    // .//GEN-BEGIN:_do_ModifySearch_Clicked_1_be
    /** Start a new search. This invokes the display() method on the component.
     * @return The FormKey for the Criteria screen.
     */    
    public FormKey do_ModifySearch_Clicked() {
        FormKey fk = null;
        // .//GEN-END:_do_ModifySearch_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_ModifySearch_Clicked_1


        // .//GEN-LAST:_do_ModifySearch_Clicked_1
        // .//GEN-BEGIN:_do_ModifySearch_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();
        
        try {
            // .//GEN-END:_do_ModifySearch_Clicked_2_be
            // Add custom code before invoking the component //GEN-FIRST:_do_ModifySearch_Clicked_2


            // .//GEN-LAST:_do_ModifySearch_Clicked_2
            // .//GEN-BEGIN:_do_ModifySearch_Clicked_3_be
            fk = myComp.displayCriteria();
        } catch (ApplicationExceptions e){
            if (log.isDebugEnabled())
                log.debug("ModifySearch Failed");
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
        } catch (FrameworkException e) {
            System.err.println(null, e);
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
        }
        // .//GEN-END:_do_ModifySearch_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_ModifySearch_Clicked_3


        // .//GEN-LAST:_do_ModifySearch_Clicked_3
        // .//GEN-BEGIN:_do_ModifySearch_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_ModifySearch_Clicked_4_be
    // .//GEN-BEGIN:_do_Refresh_Clicked_1_be
    /** Re-executes the search, using the same criteria as used before.
     * @return The FormKey for the Results screen.
     */    
    public FormKey do_Refresh_Clicked() {
        FormKey fk = null;
        // .//GEN-END:_do_Refresh_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Refresh_Clicked_1


        // .//GEN-LAST:_do_Refresh_Clicked_1
        // .//GEN-BEGIN:_do_Refresh_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();
        
        try {
            // .//GEN-END:_do_Refresh_Clicked_2_be
            // Add custom code before invoking the component //GEN-FIRST:_do_Refresh_Clicked_2


            // .//GEN-LAST:_do_Refresh_Clicked_2
            // .//GEN-BEGIN:_do_Refresh_Clicked_3_be
            fk = myComp.displayResults();
        } catch (ApplicationExceptions e){
            if (log.isDebugEnabled())
                log.debug("Refresh Failed");
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
        } catch (FrameworkException e) {
            System.err.println(null, e);
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
        }
        // .//GEN-END:_do_Refresh_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_Refresh_Clicked_3


        // .//GEN-LAST:_do_Refresh_Clicked_3
        // .//GEN-BEGIN:_do_Refresh_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_Refresh_Clicked_4_be

#if ($Creator != null) #begin
    // .//GEN-BEGIN:_do_Create_Clicked_1_be
    /** Invokes the createFromResults() method on the component.
     * @return The FormKey for the Create screen.
     */    
    public FormKey do_Create_Clicked() {
        FormKey fk = null;
        // .//GEN-END:_do_Create_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Create_Clicked_1


        // .//GEN-LAST:_do_Create_Clicked_1
        // .//GEN-BEGIN:_do_Create_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();
        
        try {
            // .//GEN-END:_do_Create_Clicked_2_be
            // Add custom code before invoking the component //GEN-FIRST:_do_Create_Clicked_2


            // .//GEN-LAST:_do_Create_Clicked_2
            // .//GEN-BEGIN:_do_Create_Clicked_3_be
            fk = myComp.createFromResults();
        } catch (ApplicationExceptions e){
            if (log.isDebugEnabled())
                log.debug("Create Failed");
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
        } catch (FrameworkException e) {
            System.err.println(null, e);
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
        }
        // .//GEN-END:_do_Create_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_Create_Clicked_3


        // .//GEN-LAST:_do_Create_Clicked_3
        // .//GEN-BEGIN:_do_Create_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_Create_Clicked_4_be
#end

#if ($Viewer != null) #begin
#set $wm_parameters = ""
#set $wm_dataType = ""
#set $firstPass = "true"
#foreach $field in $KeyFields.values() #begin
#if ($firstPass == "true") #begin
#set $firstPass = "false"
#else
#set $wm_parameters = "$(wm_parameters), "
#end
#if ($(field.DataType.Upper) == "STRING" || $(field.DataType.Upper) == "VARCHAR" || $(field.DataType.Upper) == "LONGSTRING" || $(field.DataType.Upper) == "LONGVARCHAR" || $(field.DataType.Upper) == "CLOB") #begin
#set $wm_dataType = "String"
#elseif ($(field.DataType.Upper) == "INTEGER" || $(field.DataType.Upper) == "BIGINT") #begin
#set $wm_dataType = "Long"
#elseif ($(field.DataType.Upper) == "DECIMAL" || $(field.DataType.Upper) == "DOUBLE") #begin
#set $wm_dataType = "Double"
#elseif ($(field.DataType.Upper) == "BOOLEAN" || $(field.DataType.Upper) == "BIT") #begin
#set $wm_dataType = "Boolean"
#elseif ($(field.DataType.Upper) == "DATE_ONLY" || $(field.DataType.Upper) == "DATEONLY") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateOnly"
#elseif ($(field.DataType.Upper) == "DATE_TIME" || $(field.DataType.Upper) == "DATETIME") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateTime"
#elseif ($(field.DataType.Upper) == "CURRENCY") #begin
#set $wm_dataType = "org.jaffa.datatypes.Currency"
#elseif ($(field.DataType.Upper) == "RAW" || $(field.DataType.Upper) == "LONGRAW" || $(field.DataType.Upper) == "BLOB") #begin
#set $wm_dataType = "byte[]"
#end
#set $wm_parameters = "$(wm_parameters)($wm_dataType) selectedRow.get(\"$(field.ResultsFieldName.Lower1)\")"
#end
    // .//GEN-BEGIN:_do_Rows_View_Clicked_1_be
    /** Invokes the viewObject() method on the component.
     * @param rowNum The selected row on the Results screen.
     * @return The FormKey for the View screen.
     */    
    public FormKey do_Rows_View_Clicked(String rowNum) {
        FormKey fk = null;
        // .//GEN-END:_do_Rows_View_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Rows_View_Clicked_1


        // .//GEN-LAST:_do_Rows_View_Clicked_1
        // .//GEN-BEGIN:_do_Rows_View_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();

        GridModel model = (GridModel) myForm.getRowsWM();
        GridModelRow selectedRow = model.getRow(Integer.parseInt(rowNum));
        if (selectedRow != null) {
            try {
                // .//GEN-END:_do_Rows_View_Clicked_2_be
                // Add custom code before invoking the component //GEN-FIRST:_do_Rows_View_Clicked_2


                // .//GEN-LAST:_do_Rows_View_Clicked_2
                // .//GEN-BEGIN:_do_Rows_View_Clicked_3_be
                fk = myComp.viewObject($wm_parameters);
            } catch (ApplicationExceptions e){
                if (log.isDebugEnabled())
                    log.debug("Viewer Failed");
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
            } catch (FrameworkException e) {
                System.err.println(null, e);
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
            }
        }
        // .//GEN-END:_do_Rows_View_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_Rows_View_Clicked_3


        // .//GEN-LAST:_do_Rows_View_Clicked_3
        // .//GEN-BEGIN:_do_Rows_View_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_Rows_View_Clicked_4_be
#end

#if ($Updator != null) #begin
#set $wm_parameters = ""
#set $wm_dataType = ""
#set $firstPass = "true"
#foreach $field in $KeyFields.values() #begin
#if ($firstPass == "true") #begin
#set $firstPass = "false"
#else
#set $wm_parameters = "$(wm_parameters), "
#end
#if ($(field.DataType.Upper) == "STRING" || $(field.DataType.Upper) == "VARCHAR" || $(field.DataType.Upper) == "LONGSTRING" || $(field.DataType.Upper) == "LONGVARCHAR" || $(field.DataType.Upper) == "CLOB") #begin
#set $wm_dataType = "String"
#elseif ($(field.DataType.Upper) == "INTEGER" || $(field.DataType.Upper) == "BIGINT") #begin
#set $wm_dataType = "Long"
#elseif ($(field.DataType.Upper) == "DECIMAL" || $(field.DataType.Upper) == "DOUBLE") #begin
#set $wm_dataType = "Double"
#elseif ($(field.DataType.Upper) == "BOOLEAN" || $(field.DataType.Upper) == "BIT") #begin
#set $wm_dataType = "Boolean"
#elseif ($(field.DataType.Upper) == "DATE_ONLY" || $(field.DataType.Upper) == "DATEONLY") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateOnly"
#elseif ($(field.DataType.Upper) == "DATE_TIME" || $(field.DataType.Upper) == "DATETIME") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateTime"
#elseif ($(field.DataType.Upper) == "CURRENCY") #begin
#set $wm_dataType = "org.jaffa.datatypes.Currency"
#elseif ($(field.DataType.Upper) == "RAW" || $(field.DataType.Upper) == "LONGRAW" || $(field.DataType.Upper) == "BLOB") #begin
#set $wm_dataType = "byte[]"
#end
#set $wm_parameters = "$(wm_parameters)($wm_dataType) selectedRow.get(\"$(field.ResultsFieldName.Lower1)\")"
#end
    // .//GEN-BEGIN:_do_Rows_Update_Clicked_1_be
    /** Invokes the updateObject() method on the component.
     * @param rowNum The selected row on the Results screen.
     * @return The FormKey for the Update screen.
     */    
    public FormKey do_Rows_Update_Clicked(String rowNum) {
        FormKey fk = null;
        // .//GEN-END:_do_Rows_Update_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Rows_Update_Clicked_1


        // .//GEN-LAST:_do_Rows_Update_Clicked_1
        // .//GEN-BEGIN:_do_Rows_Update_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();

        GridModel model = (GridModel) myForm.getRowsWM();
        GridModelRow selectedRow = model.getRow(Integer.parseInt(rowNum));
        if (selectedRow != null) {
            try {
                // .//GEN-END:_do_Rows_Update_Clicked_2_be
                // Add custom code before invoking the component //GEN-FIRST:_do_Rows_Update_Clicked_2


                // .//GEN-LAST:_do_Rows_Update_Clicked_2
                // .//GEN-BEGIN:_do_Rows_Update_Clicked_3_be
                fk = myComp.updateObject($wm_parameters);
            } catch (ApplicationExceptions e){
                if (log.isDebugEnabled())
                    log.debug("Update Failed");
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
            } catch (FrameworkException e) {
                System.err.println(null, e);
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
            }
        }
        // .//GEN-END:_do_Rows_Update_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_Rows_Update_Clicked_3


        // .//GEN-LAST:_do_Rows_Update_Clicked_3
        // .//GEN-BEGIN:_do_Rows_Update_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_Rows_Update_Clicked_4_be
#end

#if ($Deletor != null) #begin
#set $wm_parameters = ""
#set $wm_dataType = ""
#set $firstPass = "true"
#foreach $field in $KeyFields.values() #begin
#if ($firstPass == "true") #begin
#set $firstPass = "false"
#else
#set $wm_parameters = "$(wm_parameters), "
#end
#if ($(field.DataType.Upper) == "STRING" || $(field.DataType.Upper) == "VARCHAR" || $(field.DataType.Upper) == "LONGSTRING" || $(field.DataType.Upper) == "LONGVARCHAR" || $(field.DataType.Upper) == "CLOB") #begin
#set $wm_dataType = "String"
#elseif ($(field.DataType.Upper) == "INTEGER" || $(field.DataType.Upper) == "BIGINT") #begin
#set $wm_dataType = "Long"
#elseif ($(field.DataType.Upper) == "DECIMAL" || $(field.DataType.Upper) == "DOUBLE") #begin
#set $wm_dataType = "Double"
#elseif ($(field.DataType.Upper) == "BOOLEAN" || $(field.DataType.Upper) == "BIT") #begin
#set $wm_dataType = "Boolean"
#elseif ($(field.DataType.Upper) == "DATE_ONLY" || $(field.DataType.Upper) == "DATEONLY") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateOnly"
#elseif ($(field.DataType.Upper) == "DATE_TIME" || $(field.DataType.Upper) == "DATETIME") #begin
#set $wm_dataType = "org.jaffa.datatypes.DateTime"
#elseif ($(field.DataType.Upper) == "CURRENCY") #begin
#set $wm_dataType = "org.jaffa.datatypes.Currency"
#elseif ($(field.DataType.Upper) == "RAW" || $(field.DataType.Upper) == "LONGRAW" || $(field.DataType.Upper) == "BLOB") #begin
#set $wm_dataType = "byte[]"
#end
#set $wm_parameters = "$(wm_parameters)($wm_dataType) selectedRow.get(\"$(field.ResultsFieldName.Lower1)\")"
#end
    // .//GEN-BEGIN:_do_Rows_Delete_Clicked_1_be
    /** Invokes the deleteObject() method on the component.
     * @param rowNum The selected row on the Results screen.
     * @return The FormKey for the Delete screen.
     */    
    public FormKey do_Rows_Delete_Clicked(String rowNum) {
        FormKey fk = null;
        // .//GEN-END:_do_Rows_Delete_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Rows_Delete_Clicked_1


        // .//GEN-LAST:_do_Rows_Delete_Clicked_1
        // .//GEN-BEGIN:_do_Rows_Delete_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();

        GridModel model = (GridModel) myForm.getRowsWM();
        GridModelRow selectedRow = model.getRow(Integer.parseInt(rowNum));
        if (selectedRow != null) {
            try {
                // .//GEN-END:_do_Rows_Delete_Clicked_2_be
                // Add custom code before invoking the component //GEN-FIRST:_do_Rows_Delete_Clicked_2


                // .//GEN-LAST:_do_Rows_Delete_Clicked_2
                // .//GEN-BEGIN:_do_Rows_Delete_Clicked_3_be
                fk = myComp.deleteObject($wm_parameters);
            } catch (ApplicationExceptions e){
                if (log.isDebugEnabled())
                    log.debug("Delete Failed");
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
            } catch (FrameworkException e) {
                System.err.println(null, e);
                myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
            }
        }
        // .//GEN-END:_do_Rows_Delete_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_Rows_Delete_Clicked_3


        // .//GEN-LAST:_do_Rows_Delete_Clicked_3
        // .//GEN-BEGIN:_do_Rows_Delete_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_Rows_Delete_Clicked_4_be
#end
    // .//GEN-BEGIN:_do_Close_Clicked_1_be
    /** Quits the component and closes the browser window.
     * @return a FormKey object for the generic lookup jsp.
     */    
    public FormKey do_Close_Clicked() {
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();
        // .//GEN-END:_do_Close_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_Close_Clicked_1


        // .//GEN-LAST:_do_Close_Clicked_1
        // .//GEN-BEGIN:_do_Close_Clicked_2_be
        return myComp.quitLookup(request);
    }
    // .//GEN-END:_do_Close_Clicked_2_be
    // .//GEN-BEGIN:_do_MoreRecords_Clicked_1_be
    /** This will increment the value of the property MaxRecords. It then re-executes the search, using the same criteria as used before.
     * @return The FormKey for the Results screen.
     */    
    public FormKey do_MoreRecords_Clicked() {
        FormKey fk = null;
        // .//GEN-END:_do_MoreRecords_Clicked_1_be
        // Add custom code before processing the action //GEN-FIRST:_do_MoreRecords_Clicked_1


        // .//GEN-LAST:_do_MoreRecords_Clicked_1
        // .//GEN-BEGIN:_do_MoreRecords_Clicked_2_be
        $(Component.Upper1)ResultsForm myForm = ($(Component.Upper1)ResultsForm) form;
        $(Component.Upper1)Component myComp = ($(Component.Upper1)Component) myForm.getComponent();
        myComp.incrementMaxRecords();
        
        try {
            // .//GEN-END:_do_MoreRecords_Clicked_2_be
            // Add custom code before invoking the component //GEN-FIRST:_do_MoreRecords_Clicked_2


            // .//GEN-LAST:_do_MoreRecords_Clicked_2
            // .//GEN-BEGIN:_do_MoreRecords_Clicked_3_be
            fk = myComp.displayResults();
        } catch (ApplicationExceptions e){
            if (log.isDebugEnabled())
                log.debug("Search for More Records Failed");
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, e);
        } catch (FrameworkException e) {
            System.err.println(null, e);
            myForm.raiseError(request, ActionErrors.GLOBAL_ERROR, "error.framework.general" );
        }
        // .//GEN-END:_do_MoreRecords_Clicked_3_be
        // Add custom code after returning from the component //GEN-FIRST:_do_MoreRecords_Clicked_3


        // .//GEN-LAST:_do_MoreRecords_Clicked_3
        // .//GEN-BEGIN:_do_MoreRecords_Clicked_4_be
        // Direct User back to current form
        if (fk == null)
            fk = new FormKey(myForm.NAME, myComp.getComponentId());
        return fk;
    }
    // .//GEN-END:_do_MoreRecords_Clicked_4_be
    // All the custom code goes here //GEN-FIRST:_custom






    // .//GEN-LAST:_custom
}
