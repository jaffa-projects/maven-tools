// .//GEN-BEGIN:_1_be
/******************************************************
 * Code Generated From JAFFA Framework Default Pattern
 *
 * The JAFFA Project can be found at http://jaffa.sourceforge.net
 * and is available under the Lesser GNU Public License
 ******************************************************/
package $(BasePackage.Lower).components.$(Component.Lower).tx;

import java.util.*;
import java.lang.reflect.Method;
import org.apache.log4j.Logger;
import org.jaffa.exceptions.ApplicationExceptions;
import org.jaffa.exceptions.FrameworkException;
import org.jaffa.persistence.UOW;
import org.jaffa.persistence.exceptions.UOWException;
import org.jaffa.persistence.Criteria;
import org.jaffa.persistence.AtomicCriteria;
import org.jaffa.components.finder.CriteriaField;
import org.jaffa.components.finder.OrderByField;
import org.jaffa.components.finder.FinderTx;

import $(BasePackage.Lower).components.$(Component.Lower).I$(Component.Upper1);
import $(BasePackage.Lower).components.$(Component.Lower).dto.$(Component.Upper1)InDto;
import $(BasePackage.Lower).components.$(Component.Lower).dto.$(Component.Upper1)OutDto;
import $(BasePackage.Lower).components.$(Component.Lower).dto.$(Component.Upper1)OutRowDto;
import $(DomainPackage.Lower).$(DomainObject.Upper1);
import $(DomainPackage.Lower).$(DomainObject.Upper1)Meta;

$ScratchPad.clear()
#foreach $field in $CriteriaFields.values() #begin
#if ($(field.AltDomainObject) != null) #begin
#set $wm_package = "$(field.AltDomainObject.Package.Lower).$(field.AltDomainObject.Object.Upper1)"
#if ($ScratchPad.get($wm_package) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_package,$wm_package) != null) #begin #end
import $(wm_package);
import $(wm_package)Meta;
#end
#end
#end

#foreach $field in $ResultsFields.values() #begin
#if ($(field.SourceChain) != null) #begin
#foreach $source in $field.SourceChain.values() #begin
#set $wm_package = "$(source.Package.Lower).$(source.Object.Upper1)"
#if ($ScratchPad.get($wm_package) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_package,$wm_package) != null) #begin #end
import $(wm_package);
import $(wm_package)Meta;
#end
#end
#end
#end
$ScratchPad.clear()
// .//GEN-END:_1_be
// Add additional imports//GEN-FIRST:_imports




// .//GEN-LAST:_imports
// .//GEN-BEGIN:_2_be
/** Finder for $(DomainObject.Upper1) objects.
*/
public class $(Component.Upper1)Tx implements I$(Component.Upper1) {

    private static Logger log = Logger.getLogger($(Component.Upper1)Tx.class);

    // .//GEN-END:_2_be
    // .//GEN-BEGIN:_destroy_1_be
    /**
     * This should be invoked, when done with the component.
     */
    public void destroy() {
        // .//GEN-END:_destroy_1_be
        // Add custom code //GEN-FIRST:_destroy_1


        // .//GEN-LAST:_destroy_1
        // .//GEN-BEGIN:_destroy_2_be
    }
    // .//GEN-END:_destroy_2_be
    // .//GEN-BEGIN:_find_1_be
    /** Searches for $(DomainObject.Upper1) objects.
     * @param input The criteria based on which the search will be performed.
     * @throws ApplicationExceptions This will be thrown if the criteria contains invalid data.
     * @throws FrameworkException Indicates some system error
     * @return The search results.
     */
    public $(Component.Upper1)OutDto find($(Component.Upper1)InDto input)
    throws FrameworkException, ApplicationExceptions {
        UOW uow = null;
        try {
            // Print Debug Information for the input
            if (log.isDebugEnabled()) {
                log.debug("Input: " + (input != null ? input.toString() : null));
            }

            // create the UOW
            uow = new UOW();

            // Build the Criteria Object
            Criteria criteria = buildCriteria(input, uow);
            // .//GEN-END:_find_1_be
            // Add custom code before the query //GEN-FIRST:_find_1


            // .//GEN-LAST:_find_1
            // .//GEN-BEGIN:_find_2_be
            // Execute The Query
            Collection results = uow.query(criteria);
            // .//GEN-END:_find_2_be
            // Add custom code after the query //GEN-FIRST:_find_2


            // .//GEN-LAST:_find_2
            // .//GEN-BEGIN:_find_3_be
            // Convert the domain objects into the outbound dto
            $(Component.Upper1)OutDto output = buildDto(uow, results, input);

            // Find the total number of records
            FinderTx.findTotalRecords(uow, input, criteria, output, output.getRowsCount());

            // Print Debug Information for the output
            if (log.isDebugEnabled()) {
                log.debug("Output: " + (output != null ? output.toString() : null));
            }

            return output;

        } finally {
            if (uow != null)
                uow.rollback();
        }
    }
    // .//GEN-END:_find_3_be
    // .//GEN-BEGIN:_buildCriteria_1_be
    private Criteria buildCriteria($(Component.Upper1)InDto input, UOW uow) {
$ScratchPad.clear()
        Criteria criteria = new Criteria();
        criteria.setTable( $(DomainObject.Upper1)Meta.getName() );
        // .//GEN-END:_buildCriteria_1_be
        // Add custom criteria //GEN-FIRST:_buildCriteria_1


        // .//GEN-LAST:_buildCriteria_1
        // .//GEN-BEGIN:_buildCriteria_2_be

#foreach $field in $CriteriaFields.values() #begin
#if ( $(field.AltDomainObject) == null ) #begin
#if ( $(field.DomainField) != null && $(field.DomainField.toString()) != "") #begin
        FinderTx.addCriteria(input.get$(field.Name.Upper1)(), $(DomainObject.Upper1)Meta.$(field.DomainField.Static), criteria);
#else
#end
#else
#set $(wm_innerCriteriaName) = "$(field.AltDomainObject.Object.JavaBeanStyle)"
#foreach $joinField in $field.AltDomainObject.CriteriaJoinFields.values() #begin
#set $(wm_innerCriteriaName) = "$(wm_innerCriteriaName)$(joinField.DomainObjectField.Upper1)$(joinField.AltDomainObjectField.Upper1)"
#end
#if ($ScratchPad.get($wm_innerCriteriaName) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_innerCriteriaName,$wm_innerCriteriaName) != null) #begin #end
        Criteria $(wm_innerCriteriaName) = null;
#end
        if (input.get$(field.Name.Upper1)() != null) {
            if ($(wm_innerCriteriaName) == null) {
                $(wm_innerCriteriaName) = new Criteria();
                $(wm_innerCriteriaName).setTable($(field.AltDomainObject.Object.Upper1)Meta.getName());

#foreach $joinField in $field.AltDomainObject.CriteriaJoinFields.values() #begin
                $(wm_innerCriteriaName).addInnerCriteria($(field.AltDomainObject.Object.Upper1)Meta.$(joinField.AltDomainObjectField.Static), $(DomainObject.Upper1)Meta.$(joinField.DomainObjectField.Static));
#end
                criteria.addAggregate($wm_innerCriteriaName);
            }
            FinderTx.addCriteria(input.get$(field.Name.Upper1)(), $(field.AltDomainObject.Object.Upper1)Meta.$(field.DomainField.Static), $(wm_innerCriteriaName));
        }
#end
#end
$ScratchPad.clear()

        // append an orderBy clause to the criteria
        OrderByField[] orderByFields = input.getOrderByFields();
        if (orderByFields != null) {
            for (int i = 0; i < orderByFields.length; i++) {
                OrderByField orderByField = orderByFields[i];
                int sort = Criteria.ORDER_BY_ASC;
                if (orderByField.getSortAscending() != null && !orderByField.getSortAscending().booleanValue() )
                    sort = Criteria.ORDER_BY_DESC;
                criteria.addOrderBy(orderByField.getFieldName(), sort);
            }
        }

        // limit the output
        criteria.setFirstResult(input.getFirstRecord());
        criteria.setMaxResults(input.getMaxRecords());

        // .//GEN-END:_buildCriteria_2_be
        // Add custom criteria //GEN-FIRST:_buildCriteria_2


        // .//GEN-LAST:_buildCriteria_2
        // .//GEN-BEGIN:_buildCriteria_3_be
        return criteria;
    }
    // .//GEN-END:_buildCriteria_3_be
    // .//GEN-BEGIN:_buildDto_1_be
    private $(Component.Upper1)OutDto buildDto(UOW uow, Collection results, $(Component.Upper1)InDto input)
    throws UOWException {
$ScratchPad.clear()
        $(Component.Upper1)OutDto output = new $(Component.Upper1)OutDto();


#foreach $field in $ResultsFields.values() #begin
#if ( $field.SourceChain != null ) #begin
#set $(wm_relatedObjectCache) = "cache"
#foreach $source in $field.SourceChain.values() #begin
#set $(wm_relatedObjectCache) = "$(wm_relatedObjectCache)$(source.Object.Upper1)"
#foreach $joinField in $source.JoinFields.values() #begin
#set $(wm_relatedObjectCache) = "$(wm_relatedObjectCache)$(joinField.DomainObjectField.Upper1)$(joinField.SourceField.Upper1)"
#end
#end
#if ($ScratchPad.get($wm_relatedObjectCache) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_relatedObjectCache,$wm_relatedObjectCache) != null) #begin #end
        Map $wm_relatedObjectCache = new HashMap();
#end
#end
#end
$ScratchPad.clear()

        for (Iterator i = results.iterator(); i.hasNext();) {
            $(Component.Upper1)OutRowDto row = new $(Component.Upper1)OutRowDto();
            $(DomainObject.Upper1) $(DomainObject.JavaBeanStyle) = ($(DomainObject.Upper1)) i.next();
            // .//GEN-END:_buildDto_1_be
            // Add custom code before all the setters //GEN-FIRST:_buildDto_1


            // .//GEN-LAST:_buildDto_1

#foreach $field in $ResultsFields.values() #begin
#if ( $field.SourceChain == null ) #begin
#if ( $(field.DomainField) != null && $(field.DomainField.toString()) != "") #begin
            // .//GEN-BEGIN:_buildDto_$(field.Name.Upper1)_1_be
            row.set$(field.Name.Upper1)($(DomainObject.JavaBeanStyle).get$(field.DomainField.Upper1)());
            // .//GEN-END:_buildDto_$(field.Name.Upper1)_1_be
#else
#end
#else
#set $wm_relatedClass = ""
#set $(wm_relatedObject) = "chain"
#set $(wm_relatedObjectCache) = "cache"
#foreach $source in $field.SourceChain.values() #begin
#set $(wm_relatedObject) = "$(wm_relatedObject)$(source.Object.Upper1)"
#set $(wm_relatedObjectCache) = "$(wm_relatedObjectCache)$(source.Object.Upper1)"
#foreach $joinField in $source.JoinFields.values() #begin
#set $(wm_relatedObject) = "$(wm_relatedObject)$(joinField.DomainObjectField.Upper1)$(joinField.SourceField.Upper1)"
#set $(wm_relatedObjectCache) = "$(wm_relatedObjectCache)$(joinField.DomainObjectField.Upper1)$(joinField.SourceField.Upper1)"
#end
#end
#set $wm_relatedClass = "$(source.Object.Upper1)"
#if ($ScratchPad.get($wm_relatedObject) == null) #begin
## the following 'if' statement is used to invoke the 'put' method
#if ($ScratchPad.put($wm_relatedObject,$wm_relatedObject) != null) #begin #end
            // .//GEN-BEGIN:_buildDto_$(field.Name.Upper1)_1_be
            $(wm_relatedClass) $wm_relatedObject = null;
            {
                List keyToCache = new LinkedList();

#set $wm_previousSourceClass = ""
#set $wm_sourceFirstPass = "true"
#foreach $source in $field.SourceChain.values() #begin
#if ($wm_sourceFirstPass = "true") #begin
#set $wm_sourceFirstPass = "false"
#set $ifCondition = ""
#set $firstPass = "true"
#foreach $joinField in $source.JoinFields.values() #begin
#if ($firstPass = "true") #begin
#set $firstPass = "false"
#else
#set $ifCondition = "$(ifCondition) && "
#end
#set $ifCondition = "$(ifCondition)$(DomainObject.JavaBeanStyle).get$(joinField.DomainObjectField.Upper1)() != null"
                keyToCache.add($(DomainObject.JavaBeanStyle).get$(joinField.DomainObjectField.Upper1)());
#end
                // .//GEN-END:_buildDto_$(field.Name.Upper1)_1_be
                // Add custom code to modify the keyToCache. It is very important to keep this in sync with the Criteria used for retrieving the related object. //GEN-FIRST:_buildDto_$(field.Name.Upper1)_2


                // .//GEN-LAST:_buildDto_$(field.Name.Upper1)_2
                // .//GEN-BEGIN:_buildDto_$(field.Name.Upper1)_2_be
                if ($(wm_relatedObjectCache).containsKey(keyToCache)) {
                    $wm_relatedObject = ($(wm_relatedClass)) $(wm_relatedObjectCache).get(keyToCache);
                } else if ($(ifCondition)) {
                    Criteria criteria$(source.Object.Upper1) = new Criteria();
                    criteria$(source.Object.Upper1).setTable($(source.Object.Upper1)Meta.getName());

#foreach $joinField in $source.JoinFields.values() #begin
                    criteria$(source.Object.Upper1).addCriteria($(source.Object.Upper1)Meta.$(joinField.SourceField.Static), $(DomainObject.JavaBeanStyle).get$(joinField.DomainObjectField.Upper1)());
#end
#else
#foreach $joinField in $source.JoinFields.values() #begin
                    criteria$(wm_previousSourceClass).addInnerCriteria($(wm_previousSourceClass)Meta.$(joinField.DomainObjectField.Static), $(source.Object.Upper1)Meta.$(joinField.SourceField.Static));
#end

                    Criteria criteria$(source.Object.Upper1) = new Criteria();
                    criteria$(source.Object.Upper1).setTable($(source.Object.Upper1)Meta.getName());
                    criteria$(source.Object.Upper1).addAggregate(criteria$(wm_previousSourceClass));
#end
#set $wm_previousSourceClass = "$(source.Object.Upper1)"
#end
                    // .//GEN-END:_buildDto_$(field.Name.Upper1)_2_be
                    // Add custom code to modify the criteria. It is very important to keep this in sync with the key used for accessing the cache. //GEN-FIRST:_buildDto_$(field.Name.Upper1)_1


                    // .//GEN-LAST:_buildDto_$(field.Name.Upper1)_1
                    // .//GEN-BEGIN:_buildDto_$(field.Name.Upper1)_3_be
                    Iterator i2 = uow.query(criteria$(wm_previousSourceClass)).iterator();
                    if (i2.hasNext() )
                        $wm_relatedObject = ($(wm_relatedClass)) i2.next();
                    $(wm_relatedObjectCache).put(keyToCache, $(wm_relatedObject));
                }
            }
            // .//GEN-END:_buildDto_$(field.Name.Upper1)_3_be
#end
            // .//GEN-BEGIN:_buildDto_$(field.Name.Upper1)_4_be
            try {
                row.set$(field.Name.Upper1)($(wm_relatedObject).get$(field.DomainField.Upper1)());
            } catch (NullPointerException e) {
                // Do nothing
            }
            // .//GEN-END:_buildDto_$(field.Name.Upper1)_4_be
#end
#end $ScratchPad.clear()
            // Add custom code to pass values to the dto //GEN-FIRST:_buildDto_2


            // .//GEN-LAST:_buildDto_2
            // .//GEN-BEGIN:_buildDto_3_be
            output.addRows(row);
        }
        return output;
    }
    // .//GEN-END:_buildDto_3_be
    // All the custom code goes here //GEN-FIRST:_custom






    // .//GEN-LAST:_custom
}
